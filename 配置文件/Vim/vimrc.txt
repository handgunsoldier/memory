" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

" Make sure you use single quotes

" 状态条
Plug 'vim-airline/vim-airline'

" On-demand loading
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }

" 自动生成tags
Plug 'ludovicchabant/vim-gutentags'

" 静态检查
Plug 'w0rp/ale', { 'for': ['c', 'cpp', 'rust'] }

" 缩进线
Plug 'Yggdroot/indentLine'

" rust 代码补全
Plug 'racer-rust/vim-racer', { 'for': 'rust' }

" go
"Plug 'fatih/vim-go', { 'do': ':GoUpdateBinaries' }

" Initialize plugin system
call plug#end()


" 打开语法高亮
syntax on


" 设置补全
set complete=i
set completeopt=menu,preview,noselect
" 按下 Ctrl+p 时的背景色
hi Pmenu ctermfg=black ctermbg=gray  guibg=#444444
hi PmenuSel ctermfg=7 ctermbg=4 guibg=#555555 guifg=#ffffff


" 显示行号
set nu

" 根据文件类型缩进
filetype indent on

" 设置行宽
set textwidth=80
" 设置折行
set wrap
" 只有遇到指定的符号（比如空格、连词号和其他标点符号），才发生折行
" set linebreak
" 指定折行处与编辑窗口的右边缘之间空出的字符数
" set wrapmargin=2

" 总是显示状态行
set laststatus=2

" 启用256色
set t_Co=256

" 以下三个配置配合使用，设置tab和缩进空格数
set tabstop=4  " tab 长度
set expandtab  " 转换 tab 为空格
set softtabstop=4 " tab 转为多少个空格
set shiftwidth=4  " 在文本上按下>>（增加一级缩进）、<<（取消一级缩进）或者==（取消全部缩进）时，每一级的字符数

" airline config
set noshowmode  " 不显示模式
let g:airline_powerline_fonts = 1
"let g:airline_section_x = ''
"let g:airline_section_warning = ''
"let g:airline_section_error = ''
"let airline#extensions#syntastic#stl_format_warn = ''
"let airline#extensions#syntastic#stl_format_err = '%E{[%e]}'


" 树状目录快捷键 Alt+1
map 1 :NERDTreeMirror<CR>
map 1 :NERDTreeToggle<CR>


" 自动生成tags，在 ~/.cache/tags 目录下
" gutentags 搜索工程目录的标志，碰到这些文件/目录名就停止向上一级目录递归
let g:gutentags_project_root = ['.root', '.svn', '.git', '.hg', '.project']
" 所生成的数据文件的名称
let g:gutentags_ctags_tagfile = '.tags'
" 将自动生成的 tags 文件全部放入 ~/.cache/tags 目录中，避免污染工程目录
let s:vim_tags = expand('~/.cache/tags')
let g:gutentags_cache_dir = s:vim_tags
" 配置 ctags 的参数
let g:gutentags_ctags_extra_args = ['--fields=+niazS', '--extra=+q']
let g:gutentags_ctags_extra_args += ['--c++-kinds=+px']
let g:gutentags_ctags_extra_args += ['--c-kinds=+px']
" 检测 ~/.cache/tags 不存在就新建
if !isdirectory(s:vim_tags)
   silent! call mkdir(s:vim_tags, 'p')
endif


" 静态检查
"let g:ale_completion_enabled = 1
let g:ale_sign_column = 0
let g:ale_linters_explicit = 1
"let g:ale_completion_delay = 500
let g:ale_echo_delay = 20
let g:ale_lint_delay = 100
let g:ale_echo_msg_format = '[%linter%] %code: %%s'
"let g:ale_lint_on_text_changed = 'normal'
let g:ale_lint_on_insert_leave = 1
let g:airline#extensions#ale#enabled = 1
let g:ale_linters = {
\   'c': ['gcc'],
\   'cpp': ['gcc'],
\   'rust': ['cargo'],
\   'go': ['gofmt', 'gometalinter'],
\   'python': ['pylint'],
\}
let g:ale_c_gcc_options = '-Wall'
let g:ale_cpp_gcc_options = '-Wall -O2'
let g:ale_rust_cargo_use_check = 1
" 忽略部分 pylint 检查
"let g:ale_python_pylint_options = '--disable=trailing-newlines,missing-docstring,invalid-name,trailing-whitespace,wildcard-import,useless-super-delegation'
"let g:ale_python_mypy_options = ''

" rust
" 手动补全和定义跳转
set hidden
" 这一行指的是你编译出来的racer所在的路径
let g:racer_cmd = '/home/zzzzer/.cargo/bin/racer'
" 显示完整函数定义
let g:racer_experimental_completer = 1
" 不弹出doc
autocmd FileType rust setlocal completeopt-=preview
" 按键映射
au FileType rust nmap gd <Plug>(rust-def)
"au FileType rust nmap gs <Plug>(rust-def-split)
"au FileType rust nmap gx <Plug>(rust-def-vertical)
au FileType rust nmap <leader>gd <Plug>(rust-doc)

" 缩进线颜色
let g:indentLine_color_term = 240
